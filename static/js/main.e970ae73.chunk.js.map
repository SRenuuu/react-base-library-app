{"version":3,"sources":["components/FooterSection/FooterSection.tsx","components/HeaderSection/HeaderSection.tsx","components/Pages/HomePage/LibrarySection/AuthorSection/Author.tsx","components/Pages/HomePage/LibrarySection/AuthorSection/AuthorList.tsx","components/Pages/HomePage/LibrarySection/AuthorSection/AddAuthor.tsx","components/Pages/HomePage/LibrarySection/AuthorSection/AuthorForm.tsx","components/Pages/HomePage/LibrarySection/AuthorSection/AuthorHeader.tsx","components/Pages/HomePage/LibrarySection/AuthorSection/AuthorSection.tsx","components/Pages/HomePage/LibrarySection/BookSection/Book.tsx","components/Pages/HomePage/LibrarySection/BookSection/BookList.tsx","components/Pages/HomePage/LibrarySection/BookSection/AddBook.tsx","components/Pages/HomePage/LibrarySection/BookSection/BookForm.tsx","components/Pages/HomePage/LibrarySection/BookSection/BookHeader.tsx","components/Pages/HomePage/LibrarySection/BookSection/BookSection.tsx","components/Pages/HomePage/LibrarySection/LibrarySection.tsx","assets/images/library-photo.webp","components/Pages/HomePage/WelcomeSection/WelcomeSection.tsx","components/Pages/HomePage/HomePage.tsx","components/Pages/AboutPage/AboutPage.tsx","components/Pages/ContactPage/ContactPage.tsx","views/ClientApp.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FooterSection","Container","fluid","Row","className","Col","HeaderSection","Navbar","collapseOnSelect","expand","bg","variant","Toggle","aria-controls","Collapse","id","Nav","to","Link","Author","props","author","num","onAuthorUpdateClick","onAuthorRemoveClick","xs","md","name","onClick","confirmAlert","title","message","buttons","label","AuthorList","authors","onUpdateClick","onRemoveClick","length","map","index","renderAuthors","AddAuthor","onAddClick","AuthorForm","authorToUpdate","onAuthorAdd","onAuthorUpdate","onFormClose","useState","authorName","setAuthorName","useEffect","sm","lg","xl","Form","onSubmit","event","preventDefault","updatedAuthor","toast","error","Group","controlId","Label","Control","type","placeholder","value","required","onChange","target","Button","AuthorHeader","AuthorSection","setAuthors","isFormVisible","setIsFormVisible","setAuthorToUpdate","authorToUpdateIndex","setAuthorToUpdateIndex","handleOnFormClose","allAuthors","slice","splice","warning","newAuthor","push","success","info","Book","book","onBookUpdateClick","onBookRemoveClick","BookList","books","renderBooks","AddBook","BookForm","bookToUpdate","onBookUpdate","onBookAdd","bookTitle","setBookTitle","bookPrice","setBookPrice","bookAuthor","setBookAuthor","selectedAuthor","setSelectedAuthor","options","setOptions","price","authorOption","clearForm","updatedBook","thousandSeparator","prefix","theme","style","borderRadius","isClearable","selectedOption","parseInt","BookHeader","BookSection","setBooks","setBookToUpdate","bookToUpdateIndex","setBookToUpdateIndex","allBooks","newBook","LibrarySection","hideProgressBar","WelcomeSection","Image","src","libraryPhoto","alt","href","HomePage","AboutPage","rel","ContactPage","as","rows","ClientApp","exact","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e970ae73.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\n\r\n// Icon imports\r\nimport {FaReact} from 'react-icons/fa';\r\n\r\n// Main component\r\nconst FooterSection: React.FC = () => {\r\n    return (\r\n        <>\r\n            <Container fluid>\r\n                <Row className=\"footer-section px-3 px-md-5 py-4\">\r\n                    <Col>\r\n                        <div className=\"content-1 mt-1 mb-3\">\r\n                            <FaReact/>\r\n                            <p className=\"mt-2\">Built with React</p>\r\n                        </div>\r\n                        <hr/>\r\n                        <div className=\"content-2 text-secondary mt-4 mb-2\">\r\n                            <p className=\"mb-1\">Developed by <em>Sandul Renuja</em></p>\r\n                            <p className=\"small\">React Base Industrial Training</p>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FooterSection;","import React from 'react';\r\nimport {Nav, Navbar} from \"react-bootstrap\";\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\n\r\nconst HeaderSection: React.FC = () => {\r\n    return (\r\n        <>\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\"\r\n                    className=\"header-section font-weight-bold my-1\">\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"m-auto text-center\">\r\n                        <LinkContainer to=\"/home\">\r\n                            <Nav.Link className=\"mx-5\">Home</Nav.Link>\r\n                        </LinkContainer>\r\n                        <LinkContainer to=\"/about\">\r\n                            <Nav.Link className=\"mx-5\">About</Nav.Link>\r\n                        </LinkContainer>\r\n                        <LinkContainer to=\"/contact\">\r\n                            <Nav.Link className=\"mx-5\">Contact</Nav.Link>\r\n                        </LinkContainer>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HeaderSection;","import React from \"react\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\n\r\n// Data types imports\r\nimport {IAuthor} from \"../../../../../types/LibraryDataTypes\";\r\n\r\n// Action confirmation imports\r\nimport {confirmAlert} from 'react-confirm-alert';\r\n\r\n// Typechecking with PropTypes\r\ntype AuthorProps = {\r\n    author: IAuthor\r\n    num: number\r\n    onAuthorUpdateClick: (authorIndex: number) => void\r\n    onAuthorRemoveClick: (authorIndex: number) => void\r\n}\r\n\r\n// Main component\r\nconst Author: React.FC<AuthorProps> = (props) => {\r\n\r\n    // Defining props\r\n    const {author, num, onAuthorUpdateClick, onAuthorRemoveClick} = props;\r\n\r\n    return (\r\n        <li className='py-2'>\r\n            <Row>\r\n                <Col xs={8} md={9}>\r\n                    <label className=\"my-1\">{num}. {author.name}</label>\r\n                </Col>\r\n                <Col xs={4} md={3} className='icons text-right pr-0 pr-sm-2 pr-md-3'>\r\n                    <i className='feather-edit text-warning pr-4 pr-lg-3' onClick={() =>\r\n                        onAuthorUpdateClick(num - 1)\r\n                    }/>\r\n                    <i className='feather-trash-2 text-danger pr-3 pr-lg-3' onClick={() =>\r\n                        confirmAlert({\r\n                            title: 'Confirm action',\r\n                            message: 'Delete the selected author?',\r\n                            buttons: [\r\n                                {\r\n                                    label: 'Yes',\r\n                                    onClick: () => onAuthorRemoveClick(num - 1),\r\n                                },\r\n                                {\r\n                                    label: 'No',\r\n                                    onClick: () => {\r\n                                    },\r\n                                }\r\n                            ]\r\n                        })\r\n                    }\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Author;","import React from \"react\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\n\r\n// Component imports\r\nimport Author from \"./Author\";\r\n\r\n// Data types imports\r\nimport {IAuthor} from \"../../../../../types/LibraryDataTypes\";\r\n\r\n// Typechecking with PropTypes\r\ntype AuthorListProps = {\r\n    authors: IAuthor[]\r\n    onUpdateClick: (authorIndex: number) => void\r\n    onRemoveClick: (authorIndex: number) => void\r\n}\r\n\r\n// Main component\r\nconst AuthorList: React.FC<AuthorListProps> = (props) => {\r\n\r\n    // Defining props\r\n    const {authors, onUpdateClick, onRemoveClick} = props;\r\n\r\n    // Custom function for rendering author list\r\n    const renderAuthors = () => {\r\n        if (authors.length === 0) {\r\n            return;\r\n        }\r\n        return authors.map((author: IAuthor, index: number) => {\r\n            return <Author author={author} key={index} num={index + 1} onAuthorUpdateClick={onUpdateClick}\r\n                           onAuthorRemoveClick={onRemoveClick}/>\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Row className=\"author-list pt-2\">\r\n            <Col xs={12}>\r\n                {authors.length === 0 && <label className='empty-list font-italic'>No authors listed here</label>}\r\n                <ul className=\"px-0 ml-0 pt-lg-1 list-unstyled\">\r\n                    {renderAuthors()}\r\n                </ul>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default AuthorList;","import React from \"react\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\n\r\n// Typechecking with PropTypes\r\ntype AddAuthorProps = {\r\n    onAddClick: () => void\r\n}\r\n\r\n// Main component\r\nconst AddAuthor: React.FC<AddAuthorProps> = (props) => {\r\n\r\n    // Defining props\r\n    const {onAddClick} = props;\r\n\r\n    return (\r\n        <Row className='add-author mt-2'>\r\n            <Col onClick={onAddClick}>\r\n                <i className='feather-plus mr-2'/>\r\n                <label>Add Author</label>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default AddAuthor;","import React, {FormEvent, useEffect, useState} from \"react\";\r\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\r\n\r\n// Data types imports\r\nimport {IAuthor} from \"../../../../../types/LibraryDataTypes\";\r\n\r\n// Toast notifications imports\r\nimport {toast} from \"react-toastify\";\r\n\r\n// Typechecking with PropTypes\r\ntype AuthorFormProps = {\r\n    onFormClose: () => void\r\n    onAuthorAdd: (author: IAuthor) => void\r\n    onAuthorUpdate: (author: IAuthor) => void\r\n    authorToUpdate: IAuthor | null\r\n}\r\n\r\n// Main component\r\nconst AuthorForm: React.FC<AuthorFormProps> = (props) => {\r\n\r\n    // Defining props\r\n    const {authorToUpdate, onAuthorAdd, onAuthorUpdate, onFormClose} = props;\r\n\r\n    // Use state for author name and initialize as null\r\n    const [authorName, setAuthorName] = useState<string | null>(null);\r\n\r\n    // Set current author name when edit button is clicked\r\n    useEffect(() => {\r\n        if (!authorToUpdate) {\r\n            return;\r\n        }\r\n        setAuthorName(authorToUpdate.name);\r\n    }, [authorToUpdate]);\r\n\r\n    // Handler functions\r\n    const handleOnAuthorNameChange = (name: string) => {\r\n        setAuthorName(name);\r\n    }\r\n\r\n    const handleOnSubmit = (event: FormEvent) => {\r\n        event.preventDefault();\r\n\r\n        if (!authorName || authorName === '') {\r\n            toast.error(\"Authorn name field cannot be empty\");\r\n            return;\r\n        }\r\n        if (authorToUpdate != null) {\r\n            const updatedAuthor: IAuthor = {...authorToUpdate, name: authorName}\r\n            onAuthorUpdate(updatedAuthor);\r\n            setAuthorName('');\r\n            return;\r\n        }\r\n\r\n        const newAuthor: IAuthor = {name: authorName};\r\n        onAuthorAdd(newAuthor);\r\n        setAuthorName(null);\r\n    };\r\n\r\n    return (\r\n        <Row className=\"author-form mt-5 mb-4\">\r\n            <Col xs={12} sm={10} md={8} lg={12} xl={9}>\r\n                <Row>\r\n                    <Col xs={12} lg={11} className='form-title align-middle mb-1 pr-0'>\r\n                        <label>{authorToUpdate === null ? \"Create\" : \"Update\"} Author</label>\r\n                        <i className='feather-x-circle float-right mt-2' onClick={onFormClose}/>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} lg={11} className='pt-4 pl-lg-4 pl-xl-5 ml-lg-2'>\r\n                        <Form onSubmit={handleOnSubmit}>\r\n                            <Form.Group controlId=\"formAuthorName\">\r\n                                <Form.Label>Name of Author</Form.Label>\r\n                                <Form.Control type=\"text\"\r\n                                              placeholder=\"\"\r\n                                              className=\"mb-2\"\r\n                                              value={authorName ? authorName : ''}\r\n                                              required\r\n                                              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\r\n                                                  handleOnAuthorNameChange(event.target.value)}\r\n                                />\r\n                                <Button className=\"form-button mt-4 float-right py-1\"\r\n                                        type=\"submit\">{authorToUpdate === null ? \"Create\" : \"Update\"}</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default AuthorForm;","import React from \"react\";\r\n\r\n// Main component\r\nconst AuthorHeader: React.FC = () => {\r\n    return (\r\n        <h2 className='author-header mt-1 mt-lg-0 mb-3 mb-md-4 pb-2 pb-md-2 pb-lg-3'>Authors</h2>\r\n    )\r\n}\r\n\r\nexport default AuthorHeader;","import React, {useState} from \"react\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\n\r\n// Component imports\r\nimport AuthorList from \"./AuthorList\";\r\nimport AddAuthor from \"./AddAuthor\";\r\nimport AuthorForm from \"./AuthorForm\";\r\nimport AuthorHeader from \"./AuthorHeader\";\r\n\r\n// Data types imports\r\nimport {IAuthor} from \"../../../../../types/LibraryDataTypes\"\r\n\r\n// Toast notifications imports\r\nimport {toast} from \"react-toastify\";\r\n\r\n// Typechecking with PropTypes\r\ntype AuthorSectionProps = {\r\n    authors: IAuthor[]\r\n    setAuthors: (authors: IAuthor[]) => void\r\n}\r\n\r\n// Main component\r\nconst AuthorSection: React.FC<AuthorSectionProps> = (props) => {\r\n\r\n    // Defining props\r\n    const {authors, setAuthors} = props;\r\n\r\n    // Usa state and initialize\r\n    const [isFormVisible, setIsFormVisible] = useState(false);\r\n    const [authorToUpdate, setAuthorToUpdate] = useState<IAuthor | null>(null);\r\n    const [authorToUpdateIndex, setAuthorToUpdateIndex] = useState<number | null>(null);\r\n\r\n    // Handler functions\r\n    const handleOnFormClose = () => {\r\n        setIsFormVisible(false);\r\n        setAuthorToUpdateIndex(null);\r\n        setAuthorToUpdate(null);\r\n    };\r\n\r\n    const handleOnAddClick = () => {\r\n        setAuthorToUpdateIndex(null);\r\n        setAuthorToUpdate(null);\r\n        setIsFormVisible(true);\r\n    };\r\n\r\n    const handleOnUpdateClick = (index: number) => {\r\n        setAuthorToUpdateIndex(index);\r\n        setAuthorToUpdate(authors[index]);\r\n        setIsFormVisible(true);\r\n    };\r\n\r\n    const handleOnRemoveClick = (index: number) => {\r\n        handleOnFormClose();\r\n        const allAuthors: IAuthor[] = authors.slice();\r\n        allAuthors.splice(index, 1);\r\n        setAuthors(allAuthors);\r\n        toast.warning(\"Author deleted\");\r\n    };\r\n\r\n    const handleOnAuthorAdd = (newAuthor: IAuthor) => {\r\n        const allAuthors: IAuthor[] = authors.slice();\r\n        allAuthors.push(newAuthor);\r\n        setAuthors(allAuthors);\r\n        toast.success(\"Author added\");\r\n    };\r\n\r\n    const handleOnAuthorUpdate = (updatedAuthor: IAuthor) => {\r\n        if (authorToUpdateIndex === null) {\r\n            return;\r\n        }\r\n        const allAuthors: IAuthor[] = authors.slice();\r\n        allAuthors.splice(authorToUpdateIndex, 1, updatedAuthor);\r\n        setAuthors(allAuthors);\r\n        handleOnFormClose();\r\n        toast.info(\"Author updated\");\r\n    };\r\n\r\n    return (\r\n        <Row className=\"author-section px-0 px-md-2 px-lg-3\">\r\n            <Col>\r\n                <AuthorHeader/>\r\n                <AuthorList authors={authors} onUpdateClick={handleOnUpdateClick} onRemoveClick={handleOnRemoveClick}/>\r\n                <AddAuthor onAddClick={handleOnAddClick}/>\r\n                {isFormVisible && <AuthorForm onFormClose={handleOnFormClose} onAuthorAdd={handleOnAuthorAdd}\r\n                                              onAuthorUpdate={handleOnAuthorUpdate} authorToUpdate={authorToUpdate}/>}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default AuthorSection;","import React from \"react\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\n\r\n// Data types imports\r\nimport {IBook} from \"../../../../../types/LibraryDataTypes\";\r\n\r\n// Action confirmation imports\r\nimport {confirmAlert} from \"react-confirm-alert\";\r\n\r\n// Typechecking with PropTypes\r\ntype BookProps = {\r\n    book: IBook\r\n    num: number\r\n    onBookUpdateClick: (bookIndex: number) => void\r\n    onBookRemoveClick: (bookIndex: number) => void\r\n}\r\n\r\n// Main component\r\nconst Book: React.FC<BookProps> = (props) => {\r\n\r\n    // Defining props\r\n    const {book, num, onBookUpdateClick, onBookRemoveClick} = props;\r\n\r\n    return (\r\n        <li className='py-2'>\r\n            <Row>\r\n                <Col xs={8} md={9}>\r\n                    <label className=\"my-1\">{num}. {book.title}</label>\r\n                </Col>\r\n                <Col xs={4} md={3} className='icons text-right pr-0 pr-sm-2 pr-md-3'>\r\n                    <i className='feather-edit text-warning pr-4 pr-lg-3' onClick={\r\n                        () => onBookUpdateClick(num - 1)\r\n                    }/>\r\n                    <i className='feather-trash-2 text-danger pr-3 pr-lg-3' onClick={\r\n                        () => confirmAlert({\r\n                            title: 'Confirm action',\r\n                            message: 'Delete the selected book?',\r\n                            buttons: [\r\n                                {\r\n                                    label: 'Yes',\r\n                                    onClick: () => onBookRemoveClick(num - 1),\r\n                                },\r\n                                {\r\n                                    label: 'No',\r\n                                    onClick: () => {\r\n                                    },\r\n                                }\r\n                            ]\r\n                        })\r\n                    }/>\r\n                </Col>\r\n            </Row>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Book;","import React from \"react\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\n\r\n// Component imports\r\nimport Book from \"./Book\";\r\n\r\n// Data types imports\r\nimport {IBook} from \"../../../../../types/LibraryDataTypes\";\r\n\r\n// Typechecking with PropTypes\r\ntype BookListProps = {\r\n    books: IBook[]\r\n    onUpdateClick: (bookIndex: number) => void\r\n    onRemoveClick: (bookIndex: number) => void\r\n}\r\n\r\n// Main component\r\nconst BookList: React.FC<BookListProps> = (props) => {\r\n\r\n    // Defining props\r\n    const {books, onUpdateClick, onRemoveClick} = props;\r\n\r\n    // Custom function for rendering book list\r\n    const renderBooks = () => {\r\n        if (books.length === 0) {\r\n            return;\r\n        }\r\n        return books.map((book: IBook, index: number) => {\r\n            return <Book book={book} key={index} num={index + 1} onBookUpdateClick={onUpdateClick}\r\n                         onBookRemoveClick={onRemoveClick}/>\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Row className=\"book-list pt-2\">\r\n            <Col xs={12}>\r\n                {books.length === 0 && <label className='empty-list font-italic'>No books listed here</label>}\r\n                <ul className='px-0 ml-0 pt-lg-1 list-unstyled'>\r\n                    {renderBooks()}\r\n                </ul>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default BookList;","import React from \"react\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\n\r\n// Typechecking with PropTypes\r\ntype AddBookProps = {\r\n    onAddClick: () => void\r\n}\r\n\r\n// Main component\r\nconst AddBook: React.FC<AddBookProps> = (props) => {\r\n\r\n    // Defining props\r\n    const {onAddClick} = props;\r\n\r\n    return (\r\n        <Row className='add-book mt-2'>\r\n            <Col onClick={onAddClick}>\r\n                <i className='feather-plus mr-2'/>\r\n                <label>Add Book</label>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default AddBook;","import React, {FormEvent, useEffect, useState} from \"react\";\r\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\r\n\r\n// React Select, NumberFormat and Toast imports\r\nimport Select, {ValueType} from 'react-select';\r\nimport NumberFormat from 'react-number-format';\r\nimport {toast} from \"react-toastify\";\r\n\r\n// Data types imports\r\nimport {IAuthor, IBook, SelectOption} from \"../../../../../types/LibraryDataTypes\";\r\n\r\n// Typechecking with PropTypes\r\ntype BookFormProps = {\r\n    onFormClose: () => void\r\n    onBookAdd: (book: IBook) => void\r\n    onBookUpdate: (book: IBook) => void\r\n    bookToUpdate: IBook | null\r\n    authors: IAuthor[] | null\r\n}\r\n\r\n// Main component\r\nconst BookForm: React.FC<BookFormProps> = (props) => {\r\n\r\n    // Defining props\r\n    const {bookToUpdate, authors, onBookUpdate, onBookAdd, onFormClose} = props;\r\n\r\n    // Use state and initialize\r\n    const [bookTitle, setBookTitle] = useState<string | null>(null);\r\n    const [bookPrice, setBookPrice] = useState<string | null>(null);\r\n    const [bookAuthor, setBookAuthor] = useState<IAuthor | null>(null);\r\n    const [selectedAuthor, setSelectedAuthor] = useState<ValueType<SelectOption, false> | null>(null);\r\n    const [options, setOptions] = useState<SelectOption[]>([]);\r\n\r\n    // Update select options when authors are updated\r\n    useEffect(() => {\r\n        const options: SelectOption[] = authors ? authors.map((author: IAuthor, index: number) => {\r\n            const authorOption: SelectOption = {value: index + '', label: author.name};\r\n            return authorOption;\r\n        }) : [];\r\n\r\n        setOptions(options)\r\n    }, [authors])\r\n\r\n    // Set current book data when edit button is clicked\r\n    useEffect(() => {\r\n        if (!bookToUpdate) {\r\n            return;\r\n        }\r\n        setBookTitle(bookToUpdate.title);\r\n        setBookPrice(bookToUpdate.price);\r\n        setBookAuthor(bookToUpdate.author);\r\n\r\n        if (bookToUpdate.author) {\r\n            const authorOption: SelectOption = {value: 0 + '', label: bookToUpdate.author.name};\r\n            setSelectedAuthor(authorOption);\r\n        }\r\n\r\n    }, [bookToUpdate])\r\n\r\n    // Handler functions\r\n    const handleOnBookTitleChange = (title: string) => {\r\n        setBookTitle(title);\r\n    }\r\n\r\n    const handleOnBookPriceChange = (price: string) => {\r\n        setBookPrice(price);\r\n    }\r\n\r\n    const handleOnBookAuthorChange = (selectedOption: ValueType<SelectOption, false> | null) => {\r\n        setSelectedAuthor(selectedOption);\r\n        if (selectedOption) {\r\n            const index = parseInt((selectedOption as SelectOption).value);\r\n            const author: IAuthor | null = authors ? authors[index] : null;\r\n            setBookAuthor(author);\r\n            return;\r\n        }\r\n        setBookAuthor(null);\r\n    };\r\n\r\n    const handleOnSubmit = (event: FormEvent) => {\r\n        event.preventDefault();\r\n        if (!bookTitle || !bookPrice) {\r\n            toast.error(\"Book title and price fields cannot be empty\");\r\n            return;\r\n        }\r\n\r\n        if (bookToUpdate != null) {\r\n            const updatedBook: IBook = {...bookToUpdate, title: bookTitle, price: bookPrice, author: bookAuthor};\r\n            onBookUpdate(updatedBook);\r\n            clearForm();\r\n            return;\r\n        }\r\n\r\n        const newBook: IBook = {title: bookTitle, price: bookPrice, author: bookAuthor};\r\n        onBookAdd(newBook);\r\n        clearForm();\r\n    }\r\n\r\n    // Custom functions\r\n    const clearForm = () => {\r\n        setBookTitle(null);\r\n        setBookPrice('');\r\n        setBookAuthor(null);\r\n        setSelectedAuthor(null);\r\n    }\r\n\r\n    return (\r\n        <Row className=\"book-form my-5\">\r\n            <Col xs={12} sm={10} md={8} lg={12} xl={9}>\r\n                <Row>\r\n                    <Col xs={12} lg={11} className='form-title align-middle mb-1 pr-0'>\r\n                        <label>{bookToUpdate === null ? \"Create\" : \"Update\"} Book</label>\r\n                        <i className='feather-x-circle float-right mt-2' onClick={onFormClose}/>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} lg={11} className='pt-4 pl-lg-4 pl-xl-5 ml-lg-2'>\r\n                        <Form onSubmit={handleOnSubmit}>\r\n                            <Form.Group controlId=\"formBookTitle\">\r\n                                <Form.Label>Title of the Book</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"\" className=\"mb-2\"\r\n                                              value={bookTitle ? bookTitle : ''} required\r\n                                              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\r\n                                                  handleOnBookTitleChange(event.target.value)}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBookPrice\">\r\n                                <Form.Label>Price</Form.Label>\r\n                                <NumberFormat thousandSeparator={true} prefix={'$'} className=\"mb-2 form-control\"\r\n                                              placeholder=\"\"\r\n                                              value={bookPrice}\r\n                                              required\r\n                                              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\r\n                                                  handleOnBookPriceChange(event.target.value)}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBookAuthor\">\r\n                                <Form.Label>Author</Form.Label>\r\n                                <Select theme={style => ({\r\n                                    ...style,\r\n                                    borderRadius: 0,\r\n                                })} isClearable\r\n                                        className=\"mb-2 form-select\"\r\n                                        placeholder=\"Select author\"\r\n                                        name=\"Author\"\r\n                                        value={selectedAuthor}\r\n                                        options={options}\r\n                                        onChange={handleOnBookAuthorChange}\r\n                                />\r\n                                <Button type=\"submit\"\r\n                                        className='form-button mt-4 float-right py-1'>{bookToUpdate === null ? \"Create\" : \"Update\"}</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default BookForm;","import React from \"react\";\r\n\r\n// Main component\r\nconst BookHeader: React.FC = () => {\r\n    return (\r\n        <h2 className='book-header mt-1 mt-lg-0 mb-3 mb-lg-4 pb-2 pb-md-2 pb-lg-3'>Books</h2>\r\n    )\r\n}\r\n\r\nexport default BookHeader;","import React, {useState} from \"react\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\n\r\n// Component imports\r\nimport BookList from \"./BookList\";\r\nimport AddBook from \"./AddBook\";\r\nimport BookForm from \"./BookForm\";\r\nimport BookHeader from \"./BookHeader\";\r\n\r\n// Data types imports\r\nimport {IAuthor, IBook} from \"../../../../../types/LibraryDataTypes\";\r\n\r\n// Toast notifications imports\r\nimport {toast} from \"react-toastify\";\r\n\r\n// Typechecking with PropTypes\r\ntype BookSectionProps = {\r\n    authors: IAuthor[] | null\r\n}\r\n\r\n// Main component\r\nconst BookSection: React.FC<BookSectionProps> = (props) => {\r\n\r\n    // Defining props\r\n    const {authors} = props;\r\n\r\n    // Usa state and initialize\r\n    const initBooks: IBook[] = [];\r\n    const [books, setBooks] = useState<IBook[]>(initBooks);\r\n    const [isFormVisible, setIsFormVisible] = useState(false);\r\n    const [bookToUpdate, setBookToUpdate] = useState<IBook | null>(null);\r\n    const [bookToUpdateIndex, setBookToUpdateIndex] = useState<number | null>(null);\r\n\r\n    // Handler functions\r\n    const handleOnFormClose = () => {\r\n        setIsFormVisible(false);\r\n        setBookToUpdateIndex(null);\r\n        setBookToUpdate(null);\r\n    }\r\n\r\n    const handleOnAddClick = () => {\r\n        setBookToUpdateIndex(null);\r\n        setBookToUpdate(null);\r\n        setIsFormVisible(true);\r\n    }\r\n\r\n    const handleOnUpdateClick = (index: number) => {\r\n        setBookToUpdateIndex(index);\r\n        setBookToUpdate(books[index]);\r\n        setIsFormVisible(true);\r\n    }\r\n\r\n    const handleOnRemoveClick = (index: number) => {\r\n        handleOnFormClose();\r\n        const allBooks: IBook[] = books.slice();\r\n        allBooks.splice(index, 1);\r\n        setBooks(allBooks);\r\n        toast.warning(\"Book deleted\");\r\n    }\r\n\r\n    const handleOnBookAdd = (newBook: IBook) => {\r\n        const allBooks: IBook[] = books.slice();\r\n        allBooks.push(newBook);\r\n        setBooks(allBooks);\r\n        toast.success(\"Book added\");\r\n    }\r\n\r\n    const handleOnBookUpdate = (updatedBook: IBook) => {\r\n        if (bookToUpdateIndex === null) {\r\n            return;\r\n        }\r\n        const allBooks: IBook[] = books.slice();\r\n        allBooks.splice(bookToUpdateIndex, 1, updatedBook);\r\n        setBooks(allBooks);\r\n        handleOnFormClose();\r\n        toast.info(\"Book updated\");\r\n    }\r\n\r\n    return (\r\n        <Row className=\"book-section px-0 px-md-2 px-lg-3\">\r\n            <Col>\r\n                <BookHeader/>\r\n                <BookList books={books} onUpdateClick={handleOnUpdateClick} onRemoveClick={handleOnRemoveClick}/>\r\n                <AddBook onAddClick={handleOnAddClick}/>\r\n                {isFormVisible &&\r\n                <BookForm onFormClose={handleOnFormClose} onBookAdd={handleOnBookAdd} onBookUpdate={handleOnBookUpdate}\r\n                          bookToUpdate={bookToUpdate} authors={authors}/>}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default BookSection;","import React, {useState} from 'react';\r\nimport {Col, Row} from \"react-bootstrap\";\r\n\r\n// Component imports\r\nimport AuthorSection from \"./AuthorSection/AuthorSection\";\r\nimport BookSection from \"./BookSection/BookSection\";\r\n\r\n// Data types imports\r\nimport {IAuthor} from \"../../../../types/LibraryDataTypes\";\r\n\r\n// Toasts and action confirmation imports\r\nimport {ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // confirm alert styles\r\n\r\n// Main component\r\nconst LibrarySection: React.FC = () => {\r\n\r\n    // Use state and initialize\r\n    const initAuthors: IAuthor[] = [];\r\n    const [authors, setAuthors] = useState(initAuthors);\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col>\r\n                    <ToastContainer hideProgressBar/>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"mb-5 mx-2 mt-3 mt-md-2\">\r\n                <Col md={12} lg={6} className=\"px-lg-4 pl-lg-5 px-md-2 px-sm-0 my-2 my-lg-0 order-lg-2\">\r\n                    <AuthorSection authors={authors} setAuthors={setAuthors}/>\r\n                </Col>\r\n                <Col md={12} lg={6} className=\"px-lg-4 pr-lg-5 px-md-2 px-sm-0 my-2 my-lg-0\">\r\n                    <BookSection authors={authors}/>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LibrarySection;","export default __webpack_public_path__ + \"static/media/library-photo.48f3ad6e.webp\";","import React from 'react';\r\nimport {Col, Image, Row} from \"react-bootstrap\";\r\n\r\n// Image imports\r\nimport libraryPhoto from \"../../../../assets/images/library-photo.webp\";\r\n\r\n// Main component\r\nconst WelcomeSection: React.FC = () => {\r\n    return (\r\n        <>\r\n            <Row className=\"welcome-section header\">\r\n                <Col>\r\n                    <h1 className=\"header text-center mb-3 mt-4\">\r\n                        My Library\r\n                    </h1>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"welcome-section content\">\r\n                <Col xs={12} className=\"p-0\">\r\n                    <Image src={libraryPhoto} alt=\"Photograph of Library\"/>\r\n                </Col>\r\n                <Col xs={12} className=\"p-3 pb-2 px-4 px-md-5 text-end photo-credits text-right\">\r\n                    Photo by <a\r\n                    href=\"https://unsplash.com/@annahunko?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Anna\r\n                    Hunko</a> on <a\r\n                    href=\"https://unsplash.com/?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Unsplash</a>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default WelcomeSection;","import React from 'react';\r\nimport LibrarySection from \"./LibrarySection/LibrarySection\";\r\nimport WelcomeSection from \"./WelcomeSection/WelcomeSection\";\r\nimport {Container} from \"react-bootstrap\";\r\n\r\n//Main component\r\nconst HomePage: React.FC = () => {\r\n    return (\r\n        <>\r\n            <Container fluid>\r\n                <WelcomeSection/>\r\n                <LibrarySection/>\r\n            </Container>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\n\r\n// Main component\r\nconst AboutPage: React.FC = () => {\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Row className=\"welcome-section header\">\r\n                    <Col>\r\n                        <h1 className=\"header text-center mb-3 mt-4\">\r\n                            About\r\n                        </h1>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"mb-5 mt-4 pb-5 about-page mx-1\">\r\n                    <Col>\r\n                        <p>\r\n                            This is the first ever project developed at React Base Industrial Training. This app is\r\n                            built purely with <em>React</em> using <em>TypeScript</em>. All good software development\r\n                            strategies and coding practices were followed when developing this wep app. Currently only\r\n                            the frontend is functional.\r\n                            Everything is based on <a href=\"https://reactjs.org/docs/thinking-in-react.html\"\r\n                                                      rel=\"noreferrer\" target=\"_blank\">Thinking in React</a>.\r\n                            Various modern technologies and dependencies such as React functional components, useState\r\n                            and useEffect hooks, react-bootstrap, react-toastify, react-number-formatter,\r\n                            react-confirm-alert etc. have been utilized.\r\n                        </p>\r\n                        <p>\r\n                            It can be used to manage books and authors in a library. The app is very light weight and\r\n                            offers a simple, minimal UI. It is also fully responsive on any device. It allows you to:\r\n                        </p>\r\n                        <p className=\"mb-0 mb-xl-4\">\r\n                            <ul>\r\n                                <li>Add books</li>\r\n                                <li>Edit books</li>\r\n                                <li>Delete books</li>\r\n                            </ul>\r\n                            <ul>\r\n                                <li>Add authors</li>\r\n                                <li>Edit authors</li>\r\n                                <li>Delete authors</li>\r\n                            </ul>\r\n                        </p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AboutPage;","import React from 'react';\r\nimport {Button, Col, Container, Form, Row} from \"react-bootstrap\";\r\n\r\n//Main component\r\nconst ContactPage: React.FC = () => {\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Row className=\"welcome-section header\">\r\n                    <Col>\r\n                        <h1 className=\"header text-center mb-3 mt-4\">\r\n                            Contact\r\n                        </h1>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"mb-5 mt-4 pb-4 contact-page mx-1\">\r\n                    <Col>\r\n                        <Form>\r\n                            <Form.Row className=\"my-2\">\r\n                                <Form.Group as={Col} controlId=\"formFName\" className=\"mr-1\">\r\n                                    <Form.Label>First Name</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Enter first name\" required/>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formLName\" className=\"ml-1\">\r\n                                    <Form.Label>Last Name</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Enter last name\" required/>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row className=\"my-2\">\r\n                                <Form.Group as={Col} controlId=\"formEmail\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control type=\"email\" placeholder=\"Enter email\" required/>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row className=\"my-2\">\r\n                                <Form.Group as={Col} controlId=\"formSubject\">\r\n                                    <Form.Label>Subject</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Enter subject\" required/>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n                            <Form.Row className=\"my-2\">\r\n                                <Form.Group as={Col} className=\"mb-3\" controlId=\"formTextArea\">\r\n                                    <Form.Label>Message</Form.Label>\r\n                                    <Form.Control as=\"textarea\" rows={4}/>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Button className='form-button mt-3 float-left my-2' type=\"submit\">\r\n                                Submit\r\n                            </Button>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ContactPage;","import React from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\n\r\n// Component imports\r\nimport FooterSection from \"../components/FooterSection/FooterSection\";\r\nimport HeaderSection from \"../components/HeaderSection/HeaderSection\";\r\nimport HomePage from \"../components/Pages/HomePage/HomePage\";\r\nimport AboutPage from \"../components/Pages/AboutPage/AboutPage\";\r\nimport ContactPage from \"../components/Pages/ContactPage/ContactPage\";\r\n\r\n// Main component\r\nconst ClientApp: React.FC = () => {\r\n    return (\r\n        <>\r\n            <Router>\r\n                <HeaderSection/>\r\n                <Switch>\r\n                    <Route exact path=\"/home\" component={HomePage}/>\r\n                    <Route path=\"/about\" component={AboutPage}/>\r\n                    <Route path=\"/contact\" component={ContactPage}/>\r\n                    <Route path=\"/\" component={HomePage}/>\r\n                </Switch>\r\n                <FooterSection/>\r\n            </Router>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ClientApp;","import React from 'react';\r\n\r\n// Component imports\r\nimport ClientApp from \"./views/ClientApp\";\r\n\r\n// Style imports\r\nimport './app.scss';\r\n\r\n// Main component\r\nconst App: React.FC = () => {\r\n    return (\r\n        <>\r\n            <ClientApp/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n// Style imports\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// Component imports\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}